version: 2.1

executors:
  docker-executor:
    docker:
      - image: web_test_automation

jobs:
  checkout:
    executor: docker-executor
    steps:
      - checkout
      - run:
          name: Checking out the repository
          command: echo 'Checking out the repository...'

  build_docker_image:
    executor: docker-executor
    steps:
      - checkout
      - run:
          name: Building the Docker image
          command: |
            docker build -t $DOCKER_IMAGE .
      - run:
          name: Handle Docker build failure
          when: on_fail
          command: |
            echo "Error building Docker image."
            exit 1

  run_tests_in_docker:
    executor: docker-executor
    steps:
      - checkout
      - run:
          name: Running tests inside Docker container
          command: |
            RESULT=$(docker run --rm $DOCKER_IMAGE sh -c "mvn clean test || true")
            echo "Test Results Output:\n$RESULT"
            
            if [[ $RESULT =~ "Tests run:" ]]; then
              TESTS=$(echo $RESULT | grep -oP 'Tests run: \K\d+')
              FAILURES=$(echo $RESULT | grep -oP 'Failures: \K\d+')
              ERRORS=$(echo $RESULT | grep -oP 'Errors: \K\d+')
              SKIPPED=$(echo $RESULT | grep -oP 'Skipped: \K\d+')
              PASSED=$((TESTS - FAILURES - ERRORS - SKIPPED))
              PASSING_RATE=$(echo "scale=2; $PASSED/$TESTS*100" | bc -l)
              echo "Passed: $PASSED, Failed: $FAILURES, Errors: $ERRORS, Skipped: $SKIPPED, Total: $TESTS"
              echo "Passing Rate: $PASSING_RATE%"
              echo "export PASSING_RATE=$PASSING_RATE" >> $BASH_ENV
            else
              echo "No test result summary found in the output."
              exit 1
            fi

  publish_allure_reports:
    docker:
      - image: circleci/python:3.8
    steps:
      - run:
          name: Publishing Allure reports
          command: |
            allure generate allure-results --clean -o allure-report
            allure open allure-report

workflows:
  version: 2
  build_and_test:
    jobs:
      - checkout
      - build_docker_image
      - run_tests_in_docker:
          requires:
            - build_docker_image
      - publish_allure_reports:
          requires:
            - run_tests_in_docker

  notify:
    jobs:
      - run:
          name: Send Success Email
          command: |
            PASSING_RATE=${PASSING_RATE:-0.0}
            if [ "${CIRCLE_JOB}" == "run_tests_in_docker" ] && [ "${CIRCLECI_BUILD_NUM}" -gt 0 ]; then
              echo "The pipeline succeeded with a passing rate of ${PASSING_RATE}%." | mail -s "Pipeline Success Notification" jubearjabberjetu@gmail.com
            fi
          when: on_success

      - run:
          name: Send Unstable Email
          command: |
            PASSING_RATE=${PASSING_RATE:-0.0}
            if [ "${CIRCLE_JOB}" == "run_tests_in_docker" ] && [ "${CIRCLECI_BUILD_NUM}" -gt 0 ]; then
              echo "The pipeline is unstable with a passing rate of ${PASSING_RATE}%. Please check the logs." | mail -s "Pipeline Unstable Notification" jubearjabberjetu@gmail.com
            fi
          when: on_fail

      - run:
          name: Send Failure Email
          command: |
            PASSING_RATE=${PASSING_RATE:-0.0}
            if [ "${CIRCLE_JOB}" == "run_tests_in_docker" ] && [ "${CIRCLECI_BUILD_NUM}" -gt 0 ]; then
              echo "The pipeline failed with a passing rate of ${PASSING_RATE}%. Please check the logs." | mail -s "Pipeline Failure Notification" jubearjabberjetu@gmail.com
            fi
          when: on_fail
