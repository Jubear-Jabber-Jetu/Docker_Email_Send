version: 2.1

executors:
  docker-executor:
    docker:
      - image: circleci/openjdk:11-jdk

jobs:
  checkout:
    executor: docker-executor
    steps:
      - checkout
      - run:
          name: Checking out the repository
          command: echo 'Checking out the repository...'

  build_docker_image:
    executor: docker-executor
    steps:
      - setup_remote_docker:
          version: 20.10.7
          docker_layer_caching: true
      - checkout
      - run:
          name: Build Docker Image
          command: docker build -t web_test_automation .

  run_tests_in_docker:
    executor: docker-executor
    steps:
      - setup_remote_docker:
          version: 20.10.7
          docker_layer_caching: true
      - checkout
      - run:
          name: Run Tests in Docker Container
          command: |
            RESULT=$(docker run --rm web_test_automation sh -c "mvn clean test")
            echo "Test Results Output:\n$RESULT"

            # Extract test summary from the output
            TESTS=$(echo "$RESULT" | grep -oP 'Tests run: \K\d+')
            FAILURES=$(echo "$RESULT" | grep -oP 'Failures: \K\d+')
            ERRORS=$(echo "$RESULT" | grep -oP 'Errors: \K\d+')
            SKIPPED=$(echo "$RESULT" | grep -oP 'Skipped: \K\d+')

            if [ -n "$TESTS" ]; then
              PASSED=$((TESTS - FAILURES - ERRORS - SKIPPED))
              PASSING_RATE=$(echo "scale=2; $PASSED/$TESTS*100" | bc -l)
              echo "Passed: $PASSED, Failed: $FAILURES, Errors: $ERRORS, Skipped: $SKIPPED, Total: $TESTS"
              echo "Passing Rate: $PASSING_RATE%"

              # Export passing rate for use in later jobs
              echo "export PASSING_RATE=$PASSING_RATE" >> $BASH_ENV
            else
              echo "No test result summary found in the output."
              exit 1
            fi

workflows:
  version: 2
  build_and_test:
    jobs:
      - checkout
      - build_docker_image:
          requires:
            - checkout
      - run_tests_in_docker:
          requires:
            - build_docker_image
