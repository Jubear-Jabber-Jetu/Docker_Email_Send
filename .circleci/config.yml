version: 2.1

executors:
  docker-executor:
    docker:
      - image: circleci/openjdk:11-jdk

jobs:
  checkout:
    executor: docker-executor
    steps:
      - checkout
      - run:
          name: Checking out the repository
          command: echo 'Checking out the repository...'

  build_docker_image:
    executor: docker-executor
    steps:
      - setup_remote_docker:
          version: 20.10.7
          docker_layer_caching: true
      - checkout
      - run:
          name: Build Docker Image
          command: |
            echo "Building the Docker image..."
            docker build -t web_test_automation .

  run_tests_in_docker:
    executor: docker-executor
    steps:
      - setup_remote_docker:
          version: 20.10.7
          docker_layer_caching: true
      - checkout
      - run:
          name: Run Tests in Docker Container
          command: |
            echo "Running tests inside Docker container..."
            result=$(docker run --rm web_test_automation sh -c "mvn clean test || true")
            echo "Test Results Output:\n${result}"

            # Parse the output to get the test counts
            total=$(echo "${result}" | grep -oP 'Tests run: \K\d+')
            failures=$(echo "${result}" | grep -oP 'Failures: \K\d+')
            errors=$(echo "${result}" | grep -oP 'Errors: \K\d+')
            skipped=$(echo "${result}" | grep -oP 'Skipped: \K\d+')
            passed=$((total - failures - errors - skipped))

            # Calculate the passing rate
            if [ "$total" -gt 0 ]; then
              passingRate=$(echo "scale=2; ($passed / $total) * 100" | bc -l)
            else
              passingRate=0
            fi

            # Format the output for readability
            echo "==================== Test Summary ===================="
            echo "Total Tests Run : ${total}"
            echo "Passed          : ${passed}"
            echo "Failed          : ${failures}"
            echo "Errors          : ${errors}"
            echo "Skipped         : ${skipped}"
            echo "Passing Rate    : ${passingRate}%"
            echo "======================================================="

            # Save the summary to a file
            echo "Total: ${total}" > passing_rate.txt
            echo "Passed: ${passed}" >> passing_rate.txt
            echo "Failed: ${failures}" >> passing_rate.txt
            echo "Errors: ${errors}" >> passing_rate.txt
            echo "Skipped: ${skipped}" >> passing_rate.txt
            echo "Passing Rate: ${passingRate}%" >> passing_rate.txt

            # Set the build result based on the pass and fail counts
            if [ "$failures" -gt 0 ] || [ "$errors" -gt 0 ]; then
              echo "UNSTABLE" > result_status.txt
            else
              echo "SUCCESS" > result_status.txt
            fi
      - store_artifacts:
          path: test-results  # Save test results as artifacts
      - store_artifacts:
          path: passing_rate.txt  # Save passing rate as an artifact
      - store_artifacts:
          path: result_status.txt  # Save build result status as an artifact

workflows:
  version: 2
  build_and_test:
    jobs:
      - checkout
      - build_docker_image:
          requires:
            - checkout
      - run_tests_in_docker:
          requires:
            - build_docker_image
